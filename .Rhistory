blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post()
blogdown:::new_post("Valid Covid Certificates in Austria")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::update_meta_addin()
knitr::opts_chunk$set(collapse = TRUE)
###Libraries
pacman::p_load(tidyverse, leaflet, sf, htmlwidgets, spdep)
##Read in the Vaccination data
vac_data_intro <- read_delim("COVID19_vaccination_municipalities.csv", delim = ";")
##Geo Data
new_geo_dat <- st_read("C:/Users/sophi/Documents/Dokumente final/UNI AKTUELLES/Economic and Social Policy - Data Science/Github HW/GeoJSON-TopoJSON-Austria/2021/simplified-95/gemeinden_95_geo.json")
##Transform and merge Data
tansformated <- vac_data_intro %>%
mutate("iso" = as.character(municipality_id))
vac_data <- new_geo_dat %>%
full_join(tansformated, by = "iso")
##Bundesländer Data
new_geo_dat_laender <- st_read("C:/Users/sophi/Documents/Dokumente final/UNI AKTUELLES/Economic and Social Policy - Data Science/Github HW/GeoJSON-TopoJSON-Austria/2021/simplified-95/laender_95_geo.json")
#valid_percent_certificates
quantiles <- round(quantile(vac_data$valid_certificates_percent, na.rm = TRUE))
pal <- colorBin("Greens",
domain = vac_data$valid_certificates_percent,
bins = quantiles)
m <- leaflet(vac_data) %>%
addProviderTiles("CartoDB") %>%
setView(lat = 47.367538, lng = 13.436292, zoom = 6) %>%
addPolygons(
fillColor = ~pal(valid_certificates_percent),
opacity = 0.2,
weight = 0.5,
color = "Black",
fillOpacity = 0.7,
group = "Valid_Certificates_Percent",
popup = ~paste0("<b>", name, "</b>",
"<br/>", valid_certificates_percent, n = 2),
highlightOptions = highlightOptions(
weight = 1,
color = "red",
bringToFront = TRUE))  %>%
addLegend(position = "topright",
pal = pal,
values = quantiles,
title = "% of Valid Certificates",
group = "Valid_Certificates_Percent") %>%
addPolygons(
data = new_geo_dat_laender,
color = "black",
weight = 1,
fill = FALSE)
m
###Libraries
pacman::p_load(tidyverse, leaflet, sf, htmlwidgets, spdep)
##Read in the Vaccination data
vac_data_intro <- read_delim("COVID19_vaccination_municipalities.csv", delim = ";")
##Geo Data
new_geo_dat <- st_read("C:/Users/sophi/Documents/Dokumente final/UNI AKTUELLES/Economic and Social Policy - Data Science/Github HW/GeoJSON-TopoJSON-Austria/2021/simplified-95/gemeinden_95_geo.json")
##Transform and merge Data
tansformated <- vac_data_intro %>%
mutate("iso" = as.character(municipality_id))
vac_data <- new_geo_dat %>%
full_join(tansformated, by = "iso")
##Bundesländer Data
new_geo_dat_laender <- st_read("C:/Users/sophi/Documents/Dokumente final/UNI AKTUELLES/Economic and Social Policy - Data Science/Github HW/GeoJSON-TopoJSON-Austria/2021/simplified-95/laender_95_geo.json")
#valid_percent_certificates
quantiles <- round(quantile(vac_data$valid_certificates_percent, na.rm = TRUE))
pal <- colorBin("Greens",
domain = vac_data$valid_certificates_percent,
bins = quantiles)
m <- leaflet(vac_data) %>%
addProviderTiles("CartoDB") %>%
setView(lat = 47.367538, lng = 13.436292, zoom = 6) %>%
addPolygons(
fillColor = ~pal(valid_certificates_percent),
opacity = 0.2,
weight = 0.5,
color = "Black",
fillOpacity = 0.7,
group = "Valid_Certificates_Percent",
popup = ~paste0("<b>", name, "</b>",
"<br/>", valid_certificates_percent, n = 2),
highlightOptions = highlightOptions(
weight = 1,
color = "red",
bringToFront = TRUE))  %>%
addLegend(position = "topright",
pal = pal,
values = quantiles,
title = "% of Valid Certificates",
group = "Valid_Certificates_Percent") %>%
addPolygons(
data = new_geo_dat_laender,
color = "black",
weight = 1,
fill = FALSE)
m
blogdown:::new_post_addin()
getwd()
setwd("C:/Users/sophi/Documents/Dokumente final/UNI AKTUELLES/Programming/github/blogdown/content/post/")
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::serve_site()
getwd()
setwd("C:/Users/sophi/Documents/Dokumente final/UNI AKTUELLES/Programming/github/blogdown/")
blogdown:::new_post_addin()
help(new_post)
new_post
blogdown::new_post("Test")
blogdown:::serve_site()
